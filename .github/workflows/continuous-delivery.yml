name: Continuous Delivery
env:
  DEBUG: napi:*
  APP_NAME: template
  MACOSX_DEPLOYMENT_TARGET: '10.13'

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request: null

jobs:
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.repository == 'rustyjs/project-template'

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get Changelog Types
        id: get-changelog-types
        run: echo "::set-output name=changelog-types::$(cat .github/changelog-types.json | jq -c)"

      - name: Release Please
        uses: google-github-actions/release-please-action@14c6addfeb0bfb4b1d78fa1da89e5b08f7c6b3c3 # tag=v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          changelog-types: ${{ steps.get-changelog-types.outputs.changelog-types }}

  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              yarn napi build --platform --release --js index.cjs
              strip -x *.node

          - host: windows-latest
            build: yarn napi build --platform --release --js index.cjs
            target: x86_64-pc-windows-msvc

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              set -e &&
              yarn napi build --platform --release --js index.cjs --target x86_64-unknown-linux-gnu &&
              strip *.node

          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: set -e && yarn napi build --platform --release --js index.cjs && strip *.node

          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
              export CC=$(xcrun -f clang);
              export CXX=$(xcrun -f clang++);
              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
              yarn napi build --platform --release --js index.cjs --target aarch64-apple-darwin
              strip -x *.node

          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |-
              set -e &&
              yarn napi build --platform --release --js index.cjs --target aarch64-unknown-linux-gnu &&
              aarch64-unknown-linux-gnu-strip *.node

          - host: ubuntu-latest
            target: aarch64-linux-android
            build: |
              export CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
              export CC="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang"
              export CXX="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang++"
              export AR="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
              export PATH="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}"
              yarn napi build --platform --release --js index.cjs --target aarch64-linux-android
              ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip *.node

          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              set -e &&
              rustup target add aarch64-unknown-linux-musl &&
              yarn napi build --platform --release --js index.cjs --target aarch64-unknown-linux-musl &&
              /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node

          - host: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            setup: |
              sudo apt-get update
              sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
            build: |
              yarn napi build --platform --release --js index.cjs --target=armv7-unknown-linux-gnueabihf
              arm-linux-gnueabihf-strip *.node

    name: Stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}
    needs: release_please
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 16
          check-latest: true
          cache: yarn

      - name: Install
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache/registry/index/
            .cargo-cache/registry/cache/
            .cargo-cache/git/db/
            target/
          key: ${{ matrix.settings.target }}-cargo-registry

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-build-${{ matrix.settings.target }}-node@16

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: Install dependencies
        run: yarn install

      - name: Build in docker
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # tag=v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: --user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/root/.cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/root/.cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/root/.cargo/registry/index -v ${{ github.workspace }}:/build -w /build
          run: ${{ matrix.settings.build }}

      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  build-freebsd:
    runs-on: macos-12
    needs: release_please
    name: Build FreeBSD
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Build
        id: build
        uses: vmactions/freebsd-vm@1f933cf652838e2f86425fc50625c8cf6f39335b # tag=v0.2.4
        env:
          DEBUG: napi:*
          RUSTUP_HOME: /usr/local/rustup
          CARGO_HOME: /usr/local/cargo
          RUSTUP_IO_THREADS: 1
        with:
          envs: DEBUG RUSTUP_HOME CARGO_HOME RUSTUP_IO_THREADS
          usesh: true
          mem: 3000
          prepare: |
            pkg install -y curl node16 python2
            curl -qL https://www.npmjs.com/install.sh | sh
            npm install --location=global --ignore-scripts yarn
            curl https://sh.rustup.rs -sSf --output rustup.sh
            sh rustup.sh -y --profile minimal --default-toolchain stable
            export PATH="/usr/local/cargo/bin:$PATH"
            echo "~~~~ rustc --version ~~~~"
            rustc --version
            echo "~~~~ node -v ~~~~"
            node -v
            echo "~~~~ yarn --version ~~~~"
            yarn --version
          run: |
            export PATH="/usr/local/cargo/bin:$PATH"
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            yarn install --immutable
            yarn napi build --platform --release --js index.cjs
            strip -x *.node
            yarn test
            rm -rf node_modules
            rm -rf target
      - name: Upload artifact
        if: ${{ needs.release_please.outputs.release_created == 'true' }}
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: bindings-freebsd
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  test-macOS-windows-binding:
    name: Test bindings on ${{ matrix.settings.target }} - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc

          - host: macos-latest
            target: x86_64-apple-darwin
        node:
          - '14'
          - '16'
          - '18'
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-${{ matrix.settings.target }}-${{ matrix.node }}

      - name: Install dependencies
        run: yarn install

      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: .

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Test bindings
        run: yarn test:node

  test-linux-x64-gnu-binding:
    name: Test bindings on Linux-x64-gnu - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node:
          - '14'
          - '16'
          - '18'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-linux-x64-gnu-${{ matrix.node }}

      - name: Install dependencies
        run: yarn install

      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: .

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Test bindings
        run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-slim yarn test:node

  test-linux-x64-musl-binding:
    name: Test bindings on x86_64-unknown-linux-musl - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node:
          - '14'
          - '16'
          - '18'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-x86_64-unknown-linux-musl-${{ matrix.node }}

      - name: Install dependencies
        run: |
          yarn config set supportedArchitectures.libc "musl"
          yarn install

      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-x86_64-unknown-linux-musl
          path: .

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Test bindings
        run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-alpine yarn test:node

  test-linux-aarch64-gnu-binding:
    name: Test bindings on aarch64-unknown-linux-gnu - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node:
          - '14'
          - '16'
          - '18'
    runs-on: ubuntu-latest
    steps:
      - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-aarch64-unknown-linux-gnu
          path: .

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-linux-aarch64-gnu-${{ matrix.node }}

      - name: Install dependencies
        run: |
          yarn config set supportedArchitectures.cpu "arm64"
          yarn config set supportedArchitectures.libc "glibc"
          yarn install

      - name: Setup and run tests
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # tag=v3
        with:
          image: ghcr.io/napi-rs/napi-rs/nodejs:aarch64-${{ matrix.node }}
          options: '-v ${{ github.workspace }}:/build -w /build'
          run: |
            set -e
            yarn test:node
            ls -la

  test-linux-aarch64-musl-binding:
    name: Test bindings on aarch64-unknown-linux-musl - node@${{ matrix.node }}
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-aarch64-unknown-linux-musl
          path: .
      - name: List packages
        run: ls -R .
        shell: bash

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-linux-aarch64-musl-${{ matrix.node }}

      - name: Install dependencies
        run: |
          yarn config set supportedArchitectures.cpu "arm64"
          yarn config set supportedArchitectures.libc "musl"
          yarn install

      - name: Setup and run tests
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # tag=v3
        with:
          image: multiarch/alpine:aarch64-latest-stable
          options: '-v ${{ github.workspace }}:/build -w /build'
          run: |
            set -e
            apk add nodejs npm yarn
            yarn test:node

  test-linux-arm-gnueabihf-binding:
    name: Test bindings on armv7-unknown-linux-gnueabihf - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node:
          - '14'
          - '16'
          - '18'
    runs-on: ubuntu-latest
    steps:
      - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: bindings-armv7-unknown-linux-gnueabihf

          path: .
      - name: List packages
        run: ls -R .
        shell: bash

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: .yarn/cache
          key: npm-cache-test-linux-arm-gnueabihf-${{ matrix.node }}

      - name: Install dependencies
        run: |
          yarn config set supportedArchitectures.cpu "arm"
          yarn install

      - name: Setup and run tests
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # tag=v3
        with:
          image: ghcr.io/napi-rs/napi-rs/nodejs:armhf-${{ matrix.node }}
          options: '-v ${{ github.workspace }}:/build -w /build'
          run: |
            set -e
            yarn test:node
            ls -la

  publish:
    name: Publish packages
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    needs:
      - build-freebsd
      - release_please
      - test-macOS-windows-binding
      - test-linux-x64-gnu-binding
      - test-linux-x64-musl-binding
      - test-linux-aarch64-gnu-binding
      - test-linux-aarch64-musl-binding
      - test-linux-arm-gnueabihf-binding

    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: 16
          check-latest: true
          cache: yarn

      - name: Install rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          override: true
          toolchain: nightly
          target: ${{ matrix.settings.target }}

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Cache NPM dependencies
        uses: actions/cache@1c73980b09e7aea7201f325a7aa3ad00beddcdda # tag=v3
        with:
          path: node_modules
          key: npm-cache-ubuntu-latest-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            npm-cache-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Download all artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          path: artifacts

      - name: Move artifacts
        run: yarn artifacts

      - name: List packages
        run: ls -R ./npm

      - name: Install missing
        run: sudo apt-get install musl-dev && sudo ln -s /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1

      - name: Build
        run: yarn build

      - name: Publish
        run: yarn npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
