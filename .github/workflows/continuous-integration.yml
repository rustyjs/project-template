name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-rust:
    name: Unit Tests (Rust)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        name:
          - Stable
          - Beta
          - Nightly
          - MacOS
          - Windows

        include:
          - name: Stable
            toolchain: stable
            os: ubuntu-latest

          - name: Beta
            toolchain: beta
            os: ubuntu-latest

          - name: Nightly
            toolchain: nightly
            os: ubuntu-latest

          - name: MacOS
            toolchain: stable
            os: macOS-latest

          - name: Windows
            toolchain: stable
            os: windows-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/rust.json"

      - name: Cache dependencies
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2

      - name: Install Nextest
        uses: taiki-e/install-action@nextest

      - name: Run Tests
        run: cargo nextest run

  test-node:
    name: Unit Tests (Node)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node:
          - 14
          - 16
          - 18

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install nightly rustfmt
        run: rustup toolchain install nightly && rustup component add rustfmt --toolchain nightly

      - name: Setup node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: yarn --immutable

      - name: Build Binary
        run: yarn build

      - name: Test
        run: yarn test:node

  test-bun:
    name: Unit Tests (Bun)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Setup bun
        uses: antongolub/action-setup-bun@bc198f5cb868ce282f0a72bdd7da3a06a5387f83 # tag=v1

      - name: Install Dependencies
        run: bun install

      - name: Build Binary
        run: bun run build

      - name: Test
        run: bun run test:bun

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/rust.json"

      - name: Cache dependencies
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run rustfmt
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # tag=v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # tag=v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/rust.json"

      - name: Cache dependencies
        uses: Swatinem/rust-cache@359a70e43a0bb8a13953b04a90f76428b4959bb6 # v2

      - name: Install clippy
        run: rustup component add clippy

      - name: Run clippy
        run: cargo clippy -- -D warnings

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"

      - name: Use Node.js v16
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn --immutable

      - name: Run ESLint
        run: yarn lint --fix=false

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn --immutable

      - name: Run prettier
        uses: creyD/prettier_action@6602189cf8bac1ce73ffe601925f6127ab7f21ac # tag=v4.2
        with:
          dry: true
          prettier_options: --check .
